// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
  IMPORTANT
  FAVORITE
}

enum ROLES {
  USER
  ADMIN
}

model Users {
  id         String       @id @default(uuid())
  username   String       @unique
  authId     String       @unique @map("auth_id")
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  deletedAt  DateTime?    @map("deleted_at")
  auth       Auth         @relation(fields: [authId], references: [id])
  Note       Notes[]
  Categories Categories[]
}

model Auth {
  id       String @id @unique @default(uuid())
  email    String @unique
  password String @unique @db.VarChar(100)
  userRole ROLES
  Users    Users?
}

model Notes {
  id          String     @unique @default(uuid())
  title       String
  description String     @db.VarChar(250)
  priorityId  Int        @map("priority_id")
  categoryId  String     @map("category_id")
  userId      String     @map("user_id")
  isFavorite  Boolean    @default(false) @map("is_favorite")
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  deletedAt   DateTime?  @map("deleted_at")
  user        Users      @relation(fields: [userId], references: [id])
  category    Categories @relation(fields: [categoryId], references: [id])
  priority    Priorities @relation(fields: [priorityId], references: [id])
}

model Priorities {
  id             Int     @id @default(autoincrement())
  name           String  @unique
  priorityNumber Int     @map("priority_number")
  Notes          Notes[]
}

model Categories {
  id        String    @unique @default(uuid())
  name      String
  userId    String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  user      Users     @relation(fields: [userId], references: [id])
  notes     Notes[]
}
